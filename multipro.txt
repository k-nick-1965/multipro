
                П Р О Ц Е С С Ы .
               ──────────────────

           Процесс - подпрограмма не имеющая формальных параметров и не
        заканчивающаяся стандартным образом (return-ом).

           Каждому процессу соответствует рабочая область размером не
        менее 2Кбайт. Адрес начала рабочей области однозначно
        идентифицирует процесс. Каждому процессу присваивается приоритет
        (необязательно разный). Система приоритетов - обратная, т.е.
        максимальным является приоритет 0, минимальным - 65535. Приоритеты
        0 - 100 являются привилегированными.

           Процесс после инициализации может находится в одном из трех
        состояний:

         - активное         - состояние выполняемого в данный момент
                              времени процесса;

         - приостановленное - состояние процесса, ожидающего кванта
                              времени для перехода в активное состояние;

         - ожидание         - ожидание сигнала.

           Рабочее время процессора равномерно распределяется между
        процессами независимо от их приоритета. Каждому процессу
        выделяется квант времени, по окончании которого происходит
        перепланирование: процесс приостанавливается, и управление
        передается следующему приостановленному процессу. В случаях, когда
        перепланирование нежелательно процесс блокируется (<Lock>),
        т.е. происходит "пустое" перепланирование. К таким случаям
        относятся все случаи использования функций DOS, подавляющее
        большинство стандартных функций C, использование общих данных
        и т.п. Привилегированные процессы прерывают даже блокированные
        процессы в случае активизации по приходу сигнала, поэтому они не
        должны использовать функции DOS, подавляющее большинство
        стандартных функций C, а общие данные использовать только при
        запрете прерываний.

           Приоритет процесса учитываются только при постановке процесса в
        очередь ожидания сигнала. Процесс с большим приоритетом ставится
        ближе к началу очереди и, следовательно, раньше активизируется.


                С И Г Н А Л Ы .
               ────────────────

           Сигнал - событие, по наступлению которого активизируются
        процессы его ожидавшие.

           Сигнал идентифицируется константой, которая является его именем
        (номером) и приоритетом одновременно.  Система приоритетов -
        обратная, т.е.  максимальным является приоритет 0, минимальным -
        65535.  Рекомендуется приоритеты 0 - 100 резервировать для
        системных целей.

           Каждый сигнал имеет две очереди:

         - новую  - в которую проставляются процессы, вставшие на ожидание
                    этого сигнала;

         - старую - из которой берутся для активизации процессы при
                    поступлении сигнала.

           Наличие двух очередей необходимо для того, чтобы процесс мог
        поставить себя на ожидание следующего сигнала до того, как
        исчерпается очередь предыдущего.

           Описатель сигнала создается при инициализации. Когда процесс
        встает на ожидание сигнала - он проставляется в новую очередь
        сигнала. Когда посылается сигнал то,

         - если сигнал отсутствует в очереди активных сигналов он
           проставляется в очередь активных сигналов на место
           соответствующее его приоритету и новая очередь сигнала
           переносится в старую;

         - если сигнал присутствует в очереди, то он игнорируется.

           Если при попытке продолжить стоящий в очереди сигнал
        оказывается, что он остановлен, то он, все равно, вычеркивается из
        очереди. Когда старая очередь сигнала заканчивается - сигнал
        изымается из очереди активных сигналов.

           Активизированный по сигналу процесс остается активным до
        следующего момента перепланирования, независимо от причины оного
        (перепланирования), если не произведена блокировка (<Lock>)
        перпланирования. Далее процесс активизируется на общих основаниях
        для всех приостановленных процессов. Исключением являются процессы
        с приоритетами 0 - 100, которые прерывают даже блокированные
        процессы.

           Приоритет сигнала определяет его место в очереди активных
        сигналов, т.е. при поступлении более приоритетного сигнала
        активизация процессов из очереди менее приоритетного сигнала будет
        приостановлена (независимо от приоритетов стоящих в очереди
        сигналов) и будет возобновлена только по исчерпании очереди более
        приоритетного сигнала.


                М Е Т К И .
               ────────────

           Метки - сигналы активизируемые псевдотаймером с заданной
        периодичностью.

           Псевдотаймер запускается аппаратным таймером каждую
        миллисекунду, и проверяет свой счетчик на предмет необходимости
        выдачи сигнала (метки). В соответствии с алгоритмом псевдотаймера
        возможны метки со следующими периодами:

        1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768 ms.

        ими активизируются сигналы:

        30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60

        соответственно.

           Метка пришедшая до окончания обработки очереди предыдущей метки
        игнорируется, в соответствии с концепцией сигнала.


                П Е Р Е П Л А Н И Р О В Щ И К .
               ────────────────────────────────

           Перепланировщик - процедура осуществляющая перепланироване -
        передачу управления от одного процесса другому в соответствии с
        установленными правилами.

           Перепланировщик активизируется в следующих случаях:

        1) по инициативе псевдотаймера, с заранее установленным периодом
           от 1 до 65355 ms.;

        2) при активизации сигнала;

        3) при приостановке <Transfer>, остановке <Stop>, удалении <Kill>,
           запуске <Start>, продолжении <Continue> или постановке на
           ожидание сигнала <Wait> процесса.

           Перепланирование может быть запрещено блокированием <Lock>
        процесса, тогда невзирая на активизацию перепланировщика
        перепланирования не произойдет, кроме следующих случаев:

         - постановки на ожидание сигнала <Wait> процесса;

         - остановки <Stop> процесса;

         - удалении <Kill> процесса;

         - активизации по СИГНАЛУ процесса с привилегированным
           приоритетом.

           Последний случай является ЕДИНСТВЕННЫМ, когда перепланировщик
        обращает внимание на приоритет процесса; в остальном приоритеты
        учитываются только при постановке в очередь сигнала.
